diff --git a/redirect.module b/redirect.module
index c3c6329..dfdaf9d 100644
--- a/redirect.module
+++ b/redirect.module
@@ -404,6 +404,10 @@ function redirect_path_update(array $path) {
     if (!redirect_load_by_hash($hash)) {
       redirect_save($redirect);
     }
+    // Remove existing redirect if it matches the new alias.
+    if ($old = redirect_load_by_source($path['alias'], $path['language'])) {
+      redirect_delete($old->rid);
+    }
   }
 }
 
@@ -1020,6 +1024,10 @@ function redirect_redirect($redirect = NULL) {
 
   // Continue if the redirect has not been disabled by hook_redirect_alter().
   if (isset($redirect->redirect) && isset($redirect->callback) && $redirect->redirect !== FALSE && function_exists($redirect->callback)) {
+    // Prevent circular redirects.
+    if ($GLOBALS['base_root'] . request_uri() == url($redirect->redirect, array('absolute' => TRUE) + $redirect->redirect_options)) {
+      return FALSE;
+    }
     // Perform the actual redirect.
     $callback = $redirect->callback;
     $callback($redirect);
diff --git a/redirect.test b/redirect.test
index 1c237f8..546a7d1 100644
--- a/redirect.test
+++ b/redirect.test
@@ -234,10 +234,14 @@ class RedirectFunctionalTest extends RedirectTestHelper {
     //$this->assertRedirect($redirect);
 
     $this->drupalPost("node/{$node->nid}/edit", array('path[alias]' => 'first-alias'), 'Save');
+    $this->assertResponse(200,"Changing node's alias back to 'first-alias' does not break page load with a circular redirect.");
+    $this->assertNoText('Infinite redirect loop prevented.');
     //$redirect = redirect_load_by_source('second-alias');
     //$this->assertRedirect($redirect);
 
     $this->drupalPost("node/{$node->nid}/edit", array('path[alias]' => 'second-alias'), 'Save');
+    $this->assertResponse(200,"Changing node's alias back to 'second-alias' does not break page load with a circular redirect.");
+    $this->assertNoText('Infinite redirect loop prevented.');
     //$redirect = redirect_load_by_source('first-alias');
     //$this->assertRedirect($redirect);
   }
