<?php
/**
 * @file
 * Main module file for date generator module.
 */

/**
 * Implementation of hook_init().
 */
// function date_generator_init() {
//   drupal_set_message('Date Generator module is ON!');
// }


function date_generator_node_load($nodes, $types) {
  // drupal_set_message('hook load!');

  // dprint_r($nodes); die;
  // dprint_r($types); die;

}

//   function date_generator_node_view($node, $view_mode, $langcode) {
//   drupal_set_message('hook_node_view() is ON!');

// // // Unified way of getting $node->title, $user->name, ...
// // $wrapper->label();

// // // Unified way of getting $node->nid, $user->uid, ...
// // $wrapper->getIdentifier();

// // // Unified way of getting $node->type, ...
// // $wrapper->getBundle();

//   // $node_wrapper = entity_metadata_wrapper('node', $node);
//   // dprint_r($node_wrapper); die;

//   dprint_r($node); die;

//   }


/**
 * Implementation of hook_block_info().
 */
function date_generator_block_info() {
  $blocks = array();
  $blocks['date_generator'] = array(
    'info' => t('Date Generator'),
    'region' => 'content-top',
    'status' => TRUE,
    'visidility' => BLOCK_VISIBILITY_LISTED,
    'page' => variable_get('site_frontpage', NULL),
  );

  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function date_generator_block_view($delta = '') {
  $block = array();
  switch($delta) {
    case 'date_generator':
    $block['subject'] = t('Date Generator');
    $block['content'] = drupal_get_form('the_date_generator_form');
    break;
  }

  return $block;
}

/**
 * Implementation of hook_form().
 */
function date_generator_form() {
  return drupal_get_form('the_date_generator_form');
}

/**
 * The date generator form
 */
function the_date_generator_form($from, &$form_state) {

  $form['date'] = array(
    '#type' => 'date_popup',
    // '#date_timezone' => 'Europe/Stockholm', 
    // '#default_value' => date('Y-m-d H:i:s'),
    // '#default_value' => date('Y-m-d'),
    '#date_year_range' => '-1:+1',
    '#date_format' => 'l d F',
    '#date_label_position' => 'none',
    '#attributes' => array(
      'class' => array('date-input'),
      'placeholder' => date('l d F'),
    ),
    // '#required' => TRUE,
  );

  $form['email'] = array(
    '#type' => 'textfield',
    // '#default_value' => t('Enter your e-mail. We will send you the results.'),
    '#attributes' => array(
      'placeholder' => t('Enter your e-mail. We will send you the results.')
    ),
    '#size' => 60,
    '#maxlength' => 128,
    // '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Generating dream evening - Go!'),
    // '#submit' => array('the_date_generator_form_submit'),
  );

  // $form['#submit'][] = 'the_date_generator_form_submit';

  // $form['actions']['submit']['#submit'][0] = 'the_date_generator_form_submit';

  return $form;
}

/**
 * date generator form submit handler
 */
function the_date_generator_form_submit($form, &$form_state) {
  // drupal_set_message('The date generator has been submitted!');
  // dprint_r($form); die;
  // dprint_r($form['date']['#value']['date']); die;
  // dprint_r($form_state); die;

  // 1- Getting date amd email value from submitted form
  // the date(field) value from the submitted form
  $form_date_value = $form['date']['#value']['date'];
  // convert date format from "l d F" to "Y-m-d".
  $form_date_value = date('Y-m-d', strtotime($form_date_value));
  // the email(field) value from the submitted form
  $form_mail_value = $form['email']['#value'];
  // dprint_r($form_date_value);
  // dprint_r($form_mail_value); die;



  // 2- Getting node of type before_activity
  // load all node of type before_activity
  $nodes_type_before_activity = node_load_multiple(array(), array('type' => array(
    'malmo_stadsteater',
    'malmo_opera',
    'skanes_dansteater',
    )));

  $all_performances_dates = array();

    // dprint_r($nodes_type_before_activity);

  foreach ($nodes_type_before_activity as $node_type_before_activity) {

    // Getting all perfomances dates
    $malmo_stadsteater_dates = substr($node_type_before_activity->field_malmo_stadsteater_date['sv'][0]['value'], 0, -9);
    $malmo_opera_dates = substr($node_type_before_activity->field_malmo_opera_date['sv'][0]['value'], 0, -9);
    $skanes_dansteater_dates = substr($node_type_before_activity->field_skanes_dansteater_date['sv'][0]['value'], 0, -9);
    // push the result to the array
    if ($malmo_stadsteater_dates) {
      array_push($all_performances_dates, $malmo_stadsteater_dates);
    }elseif ($malmo_opera_dates) {
      array_push($all_performances_dates, $malmo_opera_dates);
    }elseif ($skanes_dansteater_dates) {
      array_push($all_performances_dates, $skanes_dansteater_dates);
    }


    
    // if ($form_date_value == $malmo_stadsteater_dates || $malmo_opera_dates || $skanes_dansteater_dates) {
    //   echo "date maching!!!";
    // }

    // dprint_r($node_type_before_activity);

    // $nid = $node_type_before_activity->nid;

    // $view = node_load($nid);
    // $view = node_view($view);
    // $node_view = entity_metadata_wrapper('node', $view);

    // dprint_r($node_view);

    // dprint_r('malmo_stadsteater: ' . $malmo_stadsteater_dates);
    // dprint_r('malmo_opera: ' . $malmo_opera_dates);
    // dprint_r('skanes_dansteater: ' . $skanes_dansteater_dates);

  }
  
  var_dump($form_date_value);
  var_dump($all_performances_dates);

  if (in_array($all_performances_dates, array($form_date_value))) {
    echo "date is matching!!!";
    drupal_set_message(t('COOL! date is matching.'));
  }
  else{
    echo 'No date matching!!!!!!!!!!';
    drupal_set_message($form_date_value);
    drupal_set_message(t('Ooops! We could not found a performance in this date'), 'error');
  }

 die;

}






