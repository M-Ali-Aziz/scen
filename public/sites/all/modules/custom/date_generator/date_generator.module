<?php
/**
 * @file
 * Main module file for date generator module.
 */

/**
 * Implementation of hook_block_info().
 */
function date_generator_block_info() {
  $blocks = array();
  $blocks['date_generator'] = array(
    'info' => t('Date Generator'),
    'region' => 'content-top',
    'status' => TRUE,
    'visidility' => BLOCK_VISIBILITY_LISTED,
    'page' => variable_get('site_frontpage', NULL),
  );

  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function date_generator_block_view($delta = '') {
  $block = array();
  switch($delta) {
    case 'date_generator':
    $block['subject'] = t('Date Generator');
    $block['content'] = drupal_get_form('the_date_generator_form');
    break;
  }

  return $block;
}

/**
 * The date generator form.
 */
function the_date_generator_form($from, &$form_state) {
  $form['date'] = array(
    '#type' => 'date_popup',
    '#default_value' => date('Y-m-d'),
    '#date_year_range' => '0:+1',
    '#date_format' => 'd F Y',
    '#required' => TRUE,
    '#date_label_position' => 'none',
    '#attributes' => array(
      'class' => array('date-input'),
      'placeholder' => date('l d F'),
    ),
  );

  $form['email'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => t('Enter your e-mail. We will send you the results.')
    ),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Generating dream evening - Go!'),
  );

  return $form;
}


/**
 * Validate form input.
 */
function the_date_generator_form_validate(&$form, &$form_state) {
  $values = $form_state['values'];

  $nodes = node_load_multiple(array(), array('type' => array(
    'malmo_stadsteater',
    'malmo_opera',
    'skanes_dansteater',
  )));

  // Validate email field.
  if (!valid_email_address($values['email'])) {
    echo 'Not a valid email!';

    form_set_error('email', t('Not a valid email.'));
  }

  // Loop all nodes.
  foreach ($nodes as $node) {
    $wrapper = entity_metadata_wrapper('node', $node);

    // Getting all perfomances dates.
    if (isset($wrapper->field_malmo_stadsteater_date)) {
      $all_performances_dates[] = format_date($wrapper->field_malmo_stadsteater_date->value(), 'custom', 'Y-m-d');
    }

    if (isset($wrapper->field_malmo_opera_date)) {
      $all_performances_dates[] = format_date($wrapper->field_malmo_opera_date->value(), 'custom', 'Y-m-d');
    }


    if (isset($wrapper->skanes_dansteater_dates)) {
      $all_performances_dates[] = format_date($wrapper->skanes_dansteater_dates->value(), 'custom', 'Y-m-d');
    }
  }

  // Return error message if there is no performance matched with the wished date.
  if (!in_array($values['date'], $all_performances_dates)) {
    echo 'No valid dates found!';
    // TODO: Print form errors in theme.
    form_set_error('date', t('Oops! We could not found a performance in ' . $values['date'] . '.'));
  }
}

/**
 * date generator form submit handler
 */
function the_date_generator_form_submit(&$form, &$form_state) {
  $values = $form_state['values'];

  // Convert date format to "Y-m-d".
  $form_date_value = date('Y-m-d', strtotime($values['date']));

  // The email value.
  $form_mail_value = $values['email'];

  // Load all nodes of defined type.
  $nodes = node_load_multiple(array(), array('type' => array(
    'before_activity',
    'malmo_stadsteater',
    'malmo_opera',
    'skanes_dansteater',
    'after_activity',
  )));


  // Loop all nodes.
  foreach ($nodes as $node) {
    // Wrapp node object.
    $wrapper = entity_metadata_wrapper('node', $node);

    // Get all perfomances for malmo stadsteater.
    if (isset($wrapper->field_malmo_stadsteater_date)) {
      $malmo_stadsteater_dates = format_date($wrapper->field_malmo_stadsteater_date->value(), 'custom', 'Y-m-d');

      // Store all matching dates.
      if ($malmo_stadsteater_dates === $form_date_value) {
        $all_matched_performances_nids[] = $node->nid;
      }

      // Store all performance dates.
      $all_performances_dates[] = $malmo_stadsteater_dates;
    }

    // Get all perfomances for malmo opera.
    if (isset($wrapper->field_malmo_opera_date)) {
      $malmo_stadsteater_dates = format_date($wrapper->field_malmo_opera_date->value(), 'custom', 'Y-m-d');

      // Store all matching dates.
      if ($malmo_opera_dates === $form_date_value) {
        $all_matched_performances_nids[] = $node->nid;

      }

      // Store all performance dates.
      $all_performances_dates[] = $malmo_opera_dates;
    }

    // Get all perfomances for skanes dansteater.
    if (isset($wrapper->skanes_dansteater_dates)) {
      $malmo_stadsteater_dates = format_date($wrapper->skanes_dansteater_dates->value(), 'custom', 'Y-m-d');

      // Store all matching dates.
      if ($skanes_dansteater_dates === $form_date_value) {
        $all_matched_performances_nids[] = $node->nid;
      }

      // Store all performance dates.
      $all_performances_dates[] = $skanes_dansteater_dates;
    }

    // Getting node ids(nid) of type before_activity
    if ($node->type == 'before_activity') {
      $before_activity_nids[] = $node->nid;
    }

    // Getting node ids(nid) of type after_activity
    if ($node->type == 'after_activity') {
      $after_activity_nids[] = $node->nid;
    }
  }
    
  drupal_set_message($form_date_value);
  drupal_set_message(t('COOL! date is matching.'));

  // Get random nids
  // Randomly getting two nids from $before_activity_nids
  $random_before_activity_nid_keys = array_rand($before_activity_nids, 2);
  $random_before_activity_nid_one = $before_activity_nids[$random_before_activity_nid_keys[0]];
  $random_before_activity_nid_two = $before_activity_nids[$random_before_activity_nid_keys[1]];


  // Randomly get one nid from $all_matched_performances_nids
  $random_performance_nid_key = array_rand($all_matched_performances_nids, 1);
  $random_performance_nid = $all_matched_performances_nids[$random_performance_nid_key];


  // Randomly getting nids from $after_activity_nids
  $random_after_activity_nid_keys = array_rand($after_activity_nids, 2);
  $random_after_activity_nid_one = $after_activity_nids[$random_after_activity_nid_keys[0]];
  $random_after_activity_nid_two = $after_activity_nids[$random_after_activity_nid_keys[1]];


  // Send mail.


}
