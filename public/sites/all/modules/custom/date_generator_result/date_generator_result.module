<?php
/**
 * @file
 * Provide an example of how the result of Date Generator will lock like
 */

/**
 * Implementation of hook_block_info().
 */
function date_generator_result_block_info() {
  $blocks['date_generator_result'] = array(
    'info' => t('Date Generator Result'),
    'region' => 'content',
    'status' => TRUE,
    'visidility' => BLOCK_VISIBILITY_LISTED,
    'page' => variable_get('site_frontpage', NULL),
  );

  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function date_generator_result_block_view($delta = '') {
  $block = array();
  switch($delta) {
    case 'date_generator_result':
      $block['subject'] = NULL;

      // Load all nodes of defined type.
      $nodes = node_load_multiple(array(), array('type' => array(
        'before_activity',
        'malmo_stadsteater',
        'malmo_opera',
        'skanes_dansteater',
        'after_activity',
      )));

      // Loop all nodes.
      foreach ($nodes as $node) {

        // Getting node ids(nid) of type malmo_stadsteater, malmo_opera and skanes_dansteater
        if ($node->type == 'malmo_stadsteater' || $node->type == 'malmo_opera' || $node->type == 'skanes_dansteater') {
          $all_nids['performance'][] = $node->nid; 
        }

        // Getting node ids(nid) of type before_activity
        if ($node->type == 'before_activity') {
          $all_nids['before'][] = $node->nid;
        }

        // Getting node ids(nid) of type after_activity
        if ($node->type == 'after_activity') {
          $all_nids['after'][] = $node->nid;
        }
      }

      // Get random nids
      // Randomly getting two nids from $all_nids['before']
      foreach (array_rand($all_nids['before'], 2) as $key) {
        $activity_nids['before'][] = $all_nids['before'][$key];
      }

      // Randomly get one nid from $all_nids['performance']
      $activity_nids['performance'] = $all_nids['performance'][array_rand($all_nids['performance'], 1)];

      // Randomly get one nid from $all_nids['after']
      $activity_nids['after'] = $all_nids['after'][array_rand($all_nids['after'], 1)];


      // Add before performance nodos
      foreach ($activity_nids['before'] as $before_nid) {
        $before_nodes[] = node_view(node_load($before_nid), 'teaser');
      }
      // Add performance node
      $performance_node = node_view(node_load($activity_nids['performance']), 'teaser');

      // Add after performance node
      $after_node = node_view(node_load($activity_nids['after']), 'teaser');
      

      // Add the nodes to the block content
      $block['content'] = theme('date_generator_result_template', array(
        'before_nodes' => $before_nodes,
        'performance' => $performance_node,
        'after_node' => $after_node,
        )
      );
    break;
  }

  return $block;
}

/**
 * Implementaion of hook_theme().
 */
function date_generator_result_theme($existing, $type, $theme, $path) {
  $path = drupal_get_path('theme', 'scen') . '/templates/page/content';
  
  return array(
    'date_generator_result_template' => array(
      'template' => 'date_generator_result_template',
      'variables' => array(
        'before_nodes' => array(),
        'performance' => NULL,
        'after_node' => NULL,
      ),
      'path' => $path,
    ),
  );
}


// Get nodes function
function get_nodes() {
  // Load all nodes of defined type.
  $nodes = node_load_multiple(array(), array('type' => array(
    'before_activity',
    'malmo_stadsteater',
    'malmo_opera',
    'skanes_dansteater',
    'after_activity',
  )));

  // Loop all nodes.
  foreach ($nodes as $node) {

    // Getting node ids(nid) of type malmo_stadsteater, malmo_opera and skanes_dansteater
    if ($node->type == 'malmo_stadsteater' || $node->type == 'malmo_opera' || $node->type == 'skanes_dansteater') {
      $all_nids['performance'][] = $node->nid; 
    }

    // Getting node ids(nid) of type before_activity
    if ($node->type == 'before_activity') {
      $all_nids['before'][] = $node->nid;
    }

    // Getting node ids(nid) of type after_activity
    if ($node->type == 'after_activity') {
      $all_nids['after'][] = $node->nid;
    }
  }

  // Get random nids
  // Randomly getting two nids from $all_nids['before']
  foreach (array_rand($all_nids['before'], 2) as $key) {
    $activity_nids['before'][] = $all_nids['before'][$key];
  }

  // Randomly get one nid from $all_nids['performance']
  $activity_nids['performance'] = $all_nids['performance'][array_rand($all_nids['performance'], 1)];

  // Randomly get one nid from $all_nids['after']
  $activity_nids['after'] = $all_nids['after'][array_rand($all_nids['after'], 1)];

  return $activity_nids;
}



